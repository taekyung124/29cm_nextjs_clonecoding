@use 'sass:map';
@use '../../../styles/abstracts/variables';
@use '../../../styles/abstracts/mixins';


.dialogContainer {
	overflow: hidden;
	position: fixed;
	left: 0;
	top: 0;
	right: 0;
	bottom: 0;
	@include mixins.size_wrap_width;
	@include mixins.justify_width(center, center);
	flex-wrap: wrap;
	margin: 0;
	z-index: 111;

	.dialog {
		-webkit-align-self: flex-end;
		align-self: self-end;
		position: relative;
		width: 100% !important;
		padding: 0;
		z-index: 99;
		@include mixins.prefix(animation, bottomPopAnimation .25s variables.$easeInOutQuad forwards);

		.dialogContent {
			// common
			overflow: hidden;
			@include mixins.justify_width(normal, start, column);
			background-color: variables.$colorWhite;
			-webkit-overflow-scrolling: auto;
			width: 100%;
			max-width: variables.$wrapperMaxWidth;
			padding: 0;

			// dialogHeader
			.dialogHeader {
				.dialogTitle {
					@include mixins.font_size_2xl('heading');
				}
				.dialogClose {
					position: absolute;
					top: 18px;
					right: 20px;
					width: 24px;
					height: 24px;
					@include mixins.ratio_images('/assets/icons/comm_ico_close_black');
				}
			}

			// dialogBody
			.dialogBody {
				flex: 1 1 auto;
				overflow: hidden;
				display: flex;
				flex-direction: column;
				-webkit-touch-callout: none;

				.dialogInner {
					overflow-x: hidden;
					overflow-y: auto;
				}
			}

			&:not(:has(.dialogFooter)) {
				.dialogBody {
					padding-bottom: env(safe-area-inset-bottom);
				}
			}
		}

		&.bottom, &.full {
			.dialogContent {
				.dialogHeader {
					padding: 17px 64px 16px 20px;
				}
				.dialogBody {
					.dialogInner {
						padding-top: 20px;
					}
				}
			}
		}

		// bottom
		&.bottom {
			height: auto;

			.dialogContent {
				// max-height: calc(var(--reVh) - 40px);
				max-height: calc(100dvh - 40px);

				&:not(:has(.dialogHeader)) {
					.dialogBody {
						.dialogInner {
							padding-top: 20px;
						}
					}
				}

				.dialogFooter {
					padding: 10px 20px 20px;
				}
			}
		}

		// full
		&.full {
			align-self: self-start;
			height: 100dvh;
			max-height: 100dvh;

			.dialogContent {
				// height: var(--reVh, 1vh);
				// max-height: var(--reVh, 1vh);
				height: 100dvh;
				max-height: 100dvh;

				.dialogBody {
					.dialogInner {
						min-height: 100%;
						@include mixins.justify_width(stretch, start, column);
					}
				}

				&:has(.dialogFooter) {
					.dialogBody {
						// padding-bottom: 73px;
					}
				}

				.dialogFooter {
					position: relative;
					padding: {
						top: 10px;
						right: 10px;
						bottom: calc(22px + env(safe-area-inset-bottom));
						left: 10px;
					};
					border-top: 1px solid variables.$colorGray04;
					background-color: variables.$colorWhite;
					box-shadow: 0 -10px 10px 0 rgba(0, 0, 0, .06);
				}
			}
		}

		&.alert {
			position: relative;
			max-width: 375px;
			max-height: calc(var(--reVh) - 80px);
			margin: 0 auto;
			padding: 0 30px;
			align-self: center;

			.dialogContent {
				max-width: 315px;
				max-height: calc(var(--reVh) - 80px);

				.dialogHeader {
					padding: 30px 30px 14px 30px;
				}

				.dialogBody {
					padding: 0 10px;
				}

				&:not(:has(.dialogHeader)) {
					.dialogBody {
						padding-top: 30px;
					}
				}
				.dialogFooter {
					padding: 21px 30px 22px;
				}
			}
		}
	}
}

.dim {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background-color: variables.$colorBlack;
	opacity: .5;
	overflow: hidden;
	width: 100%;
	height: 100dvh;
	// height: var(--reVh, 1vh);
	z-index: 10;
}