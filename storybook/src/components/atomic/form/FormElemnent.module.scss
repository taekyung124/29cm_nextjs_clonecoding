@use 'sass:map';
@use '../../../styles/abstracts/variables';
@use '../../../styles/abstracts/mixins';

// input
.uiInput {
	&::-ms-clear,
	&::-ms-reveal {
		display: none;
	}

	&::-webkit-search-decoration,
	&::-webkit-search-cancel-button,
	&::-webkit-search-results-button,
	&::-webkit-search-results-decoration {
		display: none;
	}

	&[type=number] {
		&::-webkit-outer-spin-button,
		&::-webkit-inner-spin-button {
			-webkit-appearance: none;
			-moz-appearance: textfield;
			margin: 0;
		}
	}

	&[type=date], &[type=month], &[type=time], &[type=week] {
		&::-webkit-calendar-picker-indicator {
			background: none;
		}
	}

	&[type=search] {
		background: variables.$colorWhite;

		&::-webkit-search-cancel-button,
		&::-webkit-search-results-button,
		&::-webkit-search-results-decoration {
			display: none;
			width: 0;
			height: 0;
		}
	}

	@include mixins.clear_focus;
	width: 100%;
	border: 0;
	@include mixins.font_size_md;
	color: variables.$colorBlack;

	&::placeholder {
		color: variables.$colorGray01;
	}

	&:focus {
		border-color: variables.$colorBlack;
		@include mixins.prefix(transition, border 0.2s ease-out);
	}
}

%inputBox {
	overflow: hidden;
	@include mixins.justify_width;

	.btnInputDel {
		flex-shrink: 0;
		display: none;
		width: 20px;
		height: 20px;
		margin-left: 20px;
		background-color: variables.$colorGreen; //temp
		@include mixins.ratio_images('/assets/icons/ico_ip_clear');
	}

	.btnTogglePw {
		flex-shrink: 0;
		display: inline-block;
		width: 20px;
		height: 20px;
		margin-left: 10px;
		@include mixins.ratio_images('/assets/icons/ico_eye');
		@include mixins.prefix(transition, background 0.2s ease-out);
		vertical-align: top;

		&.isActive {
			@include mixins.ratio_images('/assets/icons/ico_eye_active');
		}
	}

	.timerCount {
		flex-shrink: 0;
		display: inline-block;
		margin-left: 10px;
		@include mixins.font_size_md;
		color: variables.$colorRed;
		vertical-align: top;
	}

	.btnInputSearch {
		flex-shrink: 0;
		margin: {
			top: 18px;
			left: 20px;
		}
	}

	&.hasValue {
		.btnInputDel {
			display: block;
		}
	}
}

.inputBox {
	@extend %inputBox;
	padding: 0 14px;
	border-radius: 4px;
	border: 1px solid variables.$colorGray05;
	background-color: variables.$colorWhite;

	.uiInput {
		height: 44px;
		padding: 0;
		background-color: inherit;
	}

	.btnTogglePw {
		margin-top: 12px;
	}

	.btnInputDel {
		margin-top: 12px;
	}

	.timerCount {
		margin-top: 12px;
	}

	.btnArea {
		flex-shrink: 0;
		margin-top: 7px;
		margin-left: 10px;
	}

	&.isFocus {
		border-color: variables.$colorBlack;
		@include mixins.prefix(transition, border 0.2s ease-out);
	}

	&.isDisabled {
		background-color: #f9f9f9;

		.uiInput {
			color: variables.$textColorG;

			&::placeholder {
				color: rgba(variables.$colorGray01, 0.5);
			}
		}

		.btnInputDel {
			display: none;
		}

		.unit {
			opacity: 0.5;
		}
	}

	.sliderUnit {

	}
}

.inputLineBox {
	@extend %inputBox;
	border-radius: 0;
	border-bottom: 1px solid variables.$colorGray04;
	background-color: variables.$colorWhite;

	.uiInput {
		height: 49px;
		padding: 0;
		background-color: inherit;
	}

	.btnInputDel {
		margin-top: 15px;
	}

	.btnTogglePw {
		margin-top: 15px;
	}

	.timerCount {
		margin-top: 14px;
	}
	.btnArea {
		flex-shrink: 0;
		margin-top: 10px;
		margin-left: 10px;
	}
}

.inputSearchBox {
	@extend %inputBox;
	padding-right: 0;
	border: {
		top: none;
		right: none;
		left: none;
	}
	border-bottom: 4px solid variables.$colorGreen;
	border-radius: 0;

	.uiInput {
		height: 56px;
		padding: 0 20px 0 0;
		@include mixins.font_size_lg('lt');
	}

	.btnInputDel {
		margin: {
			top: 18px;
			left: 0;
		}
	}

	.btnInputSearch {
		width: 24px;
		height: 24px;
		@include mixins.ratio_images('/assets/icons/ico_search_green');
	}
}

.inputGraySearchBox {
	@extend %inputBox;
	margin-bottom: 30px;
	padding-right: 16px;
	border: none;
	border-radius: 20px;
	background-color: variables.$colorGray06;

	.uiInput {
		height: 40px;
		padding: 0 16px;
		background: none;
	}

	.btnInputDel {
		margin: {
			top: 10px;
			left: 0;
		}
	}

	.btnInputSearch {
		width: 18px;
		height: 18px;
		margin: {
			top: 10px;
			left: 10px;
		}
		@include mixins.ratio_images('/assets/icons/ico_search_black');
	}
}

.inputGuide {
	display: block;
	width: 100%;
	margin-top: 8px;
	@include mixins.font_size_sm;
	color: variables.$textColorDG;
}

.validCheck {
	.validDesc {
		display: none;
		margin-top: 8px;
		@include mixins.font_size_sm;
	}

	&.fail {
		.inputBox, .inputLineBox {
			border-color: variables.$colorRed;
		}

		.validDesc {
			display: block;
			color: variables.$colorRed;
		}
	}

	&.success {
		.inputBox, .inputLineBox {
			border-color: variables.$colorGreen;
		}

		.validDesc   {
			display: block;
			color: variables.$colorGreen;
		}
	}
}

.inputGroup {
	+ .inputGroup {
		margin-top: 10px;
	}
}

// select
.uiSelect {
	width: 100%;
	select {
		@include mixins.clear_focus;
		width: 100%;
		height: 46px;
		padding: 0 35px 0 14px;
		border: 1px solid variables.$colorGray05;
		@include mixins.ratio_images('/assets/icons/ico_select_arr', 20px, right 14px center);
		background-color: variables.$colorWhite;
		-webkit-appearance: none;
		-moz-appearance: none;
		appearance: none;
		outline: 0;
		@include mixins.font_size_md;
		color: variables.$colorBlack;
		@include mixins.no_select_text;

		&:focus {
			border-color: variables.$colorBlack;
			@include mixins.prefix(transition, border 0.2s ease-out);
		}

		&[disabled], &[aria-disabled], &[readonly] {
			border-color: variables.$colorGray05;
			background-color: variables.$colorGray06;
			@include mixins.ratio_images_change('/assets/icons/ico_select_arr_disabled');
			color: variables.$textColorG;
		}
	}


	&.line {
		select {
			height: 50px;
			padding: 0 40px 0 0;
			border-radius: 0;
			border: {
				top: 0;
				right: 0;
				bottom: 1px solid variables.$colorGray04;
				left: 0;
			};
			@include mixins.ratio_images('/assets/icons/ico_select_arr_light_gray', 20px, right center, variables.$colorWhite);
			@include mixins.font_size_md;
			color: variables.$textColorG;
		}
	}

	&.text {
		width: auto;
		height: 21px;

		select {
			width: auto;
			height: 21px;
			padding: {
				left: 0;
				right: 17px;
			}
			border: 0;
			@include mixins.ratio_images('/assets/icons/comm_ico_arw_down_black', 15px, right center);

			text-align-last: right;
			text-align: right;
			-ms-text-align-last: right;
			-moz-text-align-last: right;

			option {
				text-align-last: left;
				text-align: left;
				-ms-text-align-last: left;
				-moz-text-align-last: left;
			}
		}
	}
}

// slider
.sliderGroup {
	font-size: 0;

	.sliderBox {
		position: relative;
		padding: 0 10px;

		&:before,
		&:after {
			content: '';
			position: absolute;
			display: inline-block;
			top: 0;
			width: 10px;
			height: 4px;
			background-color: variables.$colorGray04;
		}
		&:before {
			left: 0;
		}
		&:after {
			right: 0;
		}

		.uiSlider {
			position: relative;
			display: inline-block;
			width: 100%;
			height: 4px;
			background-color: variables.$colorGray04;
			.uiSliderRange {
				position: absolute;
				z-index: 1;
				display: block;
				top: 0;
				height: 100%;
				background-color: variables.$colorGreen;
			}
			.uiSliderHandle {
				position: absolute;
				z-index: 2;
				top: -8px;
				width: 20px;
				height: 20px;
				margin-left: -10px;
				border: 4px solid variables.$colorGreen;
				border-radius: 10px;
				background-color: variables.$colorWhite;
				outline: none;
				cursor: pointer;
			}
		}
	}
	.valueTextBox {
		@include mixins.justify_width(center, between);
		margin: {
			top: 18px;
			bottom: 14px;
		}

		> span {
			user-select:none;
			color: variables.$textColorPoint;
		}
	}
	.inputGroup {
		.inputBox {
			flex: 1;
			align-items: center;
			height: 40px;
			padding-right: 14px;
			border-radius: 4px;

			&.hasValue {
				.uiInput {
					font-weight: variables.$fontWeightMedium;
					color: variables.$textColorB;
				}
			}
			.uiInput {
				height: 38px;
				padding-right: 6px;
				text-align: right;
			}

			.sliderUnit {
				flex-shrink: 0;
				display: inline-block;
				text-align: right;
				vertical-align: top;
				@include mixins.font_size_sm('md');
				color: variables.$textColorB;

				&::placeholder {
					font-weight: variables.$fontWeightMedium;
				}
			}
		}
	}
}

// textarea
.textareaBox {
	overflow: hidden;
	position: relative;
	padding-bottom: 46px;
	border-radius: 4px;
	border: 1px solid variables.$colorGray05;

	.uiTextarea {
		@include mixins.clear_focus;
		height: 92px;
		padding: 16px 16px 0;
		@include mixins.font_size_md;
		color: variables.$textColorB;

		resize: none;
		outline: none;
		border: none;
		box-shadow: none;
		background: transparent;

		&::placeholder {
			color: variables.$textColorG;
		}
	}

	.byteCheck {
		position: absolute;
		right: 14px;
		bottom: 16px;
		display: inline-block;
		color: variables.$colorGray01;
		vertical-align: top;

		.count, .max {
			display: inline-block;
			@include mixins.font_size_xs;
			vertical-align: top;
		}
	}
	&.isFocus {
		border-color: variables.$colorBlack;
		@include mixins.prefix(transition, border 0.2s ease-out);

		.count-check {
			.count {
				color: variables.$colorBlack;
			}
		}
	}

	&.isDisabled {
		background: #f9f9f9;
		border-color: variables.$colorGray05;
		@include mixins.set_placeholder_color(variables.$colorGray01);

		@include mixins.device_mobile_ios {
			-webkit-text-fill-color: variables.$colorGray01;
		}
		color: variables.$colorGray01;
	}
}

// checkbox, radio
%rdoChkReset {
	position: relative;
	display: inline-block;
	font-size: 0;
	vertical-align: top;

	input {
		position: absolute;
		width: 1px;
		height: 1px;
		padding: 0;
		margin: -1px;
		overflow: hidden;
		clip: rect(0, 0, 0, 0);
		border: 0;

		+ label {
			display: inline-block;
			position: relative;
			cursor: pointer;
			vertical-align: top;
			@include mixins.no_select_text;
		}
	}
}

.uiChk, .uiRdo {
	@extend %rdoChkReset;
	min-height: 22px;

	input {
		+ label {
			padding-left: 22px;
			min-height: 22px;

			&:before,
			&:after {
				content: '';
				display: inline-block;
				position: absolute;
				left: 0;
				top: 50%;
				@include mixins.prefix(transform, translateY(-50%));
				width: 22px;
				height: 22px;
				border-radius: 4px;
				text-align: center;
				box-sizing: border-box;
				-webkit-box-sizing: border-box;
			}

			> .text {
				display: inline-block;
				margin-left: 8px;
				@include mixins.font_size_md;
				line-height: variables.$fontSize4xl;
				color: variables.$textColorB;
				vertical-align: top;
			}

			.textGroup {
				@include mixins.justify_width;
				margin-left: 8px;

				.text {
					flex-shrink: 0;
					display: inline-block;
					margin-right: 8px;
					@include mixins.font_size_lg;
					line-height: variables.$fontSize4xl;
					color: variables.$textColorB;
					vertical-align: top;
				}

				.subText {
					display: inline-block;
					@include mixins.font_size_sm;
					line-height: variables.$fontSize4xl;
					color: variables.$textColorB;
					vertical-align: top;
				}
			}
		}

		&[disabled], &[aria-disabled], &[readonly] {
			& + label {
				pointer-events: none;
				opacity: 0.5;
			}
		}

		&:checked {
			& + label {
				&:before {
					background-color: variables.$colorGreen;
					border-color: variables.$colorGreen;
				}
			}
		}
	}
}

// checkbox
.uiChk {
	input {
		& + label {
			&:before {
				border: 1px solid variables.$colorGray05;
				background-color: variables.$colorWhite;
				left: 0;
			}

			&:after {
				@include mixins.ratio_images('/assets/icons/ico_check', 11px 8px, 5px 7px);
			}
		}

		&:checked + label {
			&:before {
				@include mixins.prefix(transition, background-color 0.15s);
			}

			&:after {
				@include mixins.ratio_images_change('/assets/icons/ico_check_active');
			}
		}
	}

	&.right {
		input {
			& + label {
				padding: {
					left: 0;
					right: 22px;
				}

				&:before {
					left: initial;
					right: 0;
				}

				&:after {
					left: initial;
					right: 0;
				}

				> .text {
					margin: {
						left: 0;
						right: 8px;
					}
					text-align: right;
				}
				> .textGroup {
					margin: {
						left: 0;
						right: 8px;
					}
				}
			}
		}
	}

	&.full {
		width: 100%;
		input {
			+ label {
				width: 100%;
				padding: {
					left: 0;
					right: 22px;
				}
				font-size: variables.$fontSizeMd;

				.text {
					margin: {
						left: 0;
						right: 6px;
					}
				}

				.stext {
					display: block;
					margin-top: 2px;
				}

				&:before, &:after {
					left: initial;
					right: 0;
				}
			}

			&:checked {
				+ label {
					.text {
						font-weight: variables.$fontWeightMedium;
					}
				}
			}
		}
	}
}

// radio
.uiRdo {
	> input {
		& + label {
			&:before, &:after {
				border-radius: 22px;
			}

			&:before {
				background-color: variables.$colorWhite;
				border: 1px solid variables.$colorGray05;
			}

			&:after {
				top: 50%;
				@include mixins.prefix(transform, translateY(-50%));
				left: 7px;
				width: 8px;
				height: 8px;
				background-color: variables.$colorGray05;
				border: none;
			}
		}

		&:checked + label {
			&:before {
				@include mixins.prefix(transition, background-color 0.15s);
			}

			&:after {
				animation: none;
				background-color: variables.$colorWhite;
			}
		}
	}
}

// toggle
%uiToggle {
	position: relative;
	display: inline-block;
	vertical-align: top;
	box-sizing: border-box;

	input[type=checkbox] {
		position: absolute;
		width: 1px;
		height: 1px;
		padding: 0;
		margin: -1px;
		overflow: hidden;
		clip: rect(0, 0, 0, 0);
		border: 0;

		& + label {
			display: inline-block;
			vertical-align: top;
			@include mixins.font_size_sm('body', 20px);
			color: variables.$textColorDG;
			cursor: pointer;

			&:before {
				content: '';
				position: absolute;
				background: variables.$colorGray05;
				left: 0;
				top: 0;
				z-index: 1;
				@include mixins.prefix(transition, left .2s ease-out);
				@include mixins.prefix(transition, background-color .15s ease-out);
			}

			&:after {
				content: '';
				position: absolute;
				background: #fff;
				border-radius: 50%;
				top: 2px;
				z-index: 2;
				@include mixins.prefix(transition, left .2s ease-out);
			}
		}

		&:checked {
			& + label {
				color: variables.$colorBlack;
				font-weight: variables.$fontWeightMedium;

				&:before {
					background: variables.$colorGreen;
				}
			}
		}

		&:disabled, &[readonly] {
			& + label {
				opacity: 0.5;
			}
		}
	}
}

.uiToggle {
	@extend %uiToggle;

	input[type=checkbox] {
		& + label {
			min-width: 32px;
			height: 20px;
			padding-left: 38px;

			&:before {
				width: 32px;
				height: 20px;
				border-radius: 20px;
			}

			&:after {
				width: 16px;
				height: 16px;
				margin-left: -18px;
				left: 20px;
			}
		}

		&:checked {
			& + label {
				&:after {
					left: 32px !important;
				}
			}
		}
	}

	&Lg {
		@extend %uiToggle;

		input[type=checkbox] {
			& + label {
				min-width: 38px;
				height: 24px;
				padding-left: 38px;
				line-height: 24px;

				&:before {
					width: 38px;
					height: 24px;
					border-radius: 24px;
				}

				&:after {
					width: 20px;
					height: 20px;
					margin-left: -22px;
					left: 24px;
				}
			}

			&:checked {
				& + label {
					&:after {
						left: 38px !important;
					}
				}
			}
		}
	}
}